import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import GlobalContext from "@/components/GlobalContext";
import Simulation from "@/components/Simulation";
import Position from "@/components/Position";
import { useState, useEffect } from "react";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [page, setPage] = useState("POSITION");
  const [totalAssetInThePool, setTotalAssetInThePool] = useState(1000000);
  const [totalAssetBorrowed, setTotalAssetBorrowed] = useState(730000);
  const [borrowedRatio, setBorrowedRatio] = useState(0);
  const [borrowBaseRate, setBorrowBaseRate] = useState(0.015);
  const [borrowPerSecondRate, setBorrowPerSecondRate] = useState(
    (4.166 / 10 ** 8).toFixed(11)
  );
  const [executionBaseFee, setExecutionBaseFee] = useState(0.001);

  useEffect(() => {
    setBorrowedRatio(totalAssetBorrowed / totalAssetInThePool);
  }, [totalAssetInThePool, totalAssetBorrowed]);

  return (
    <>
      <Head>
        <title>Fr0x-POC</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <GlobalContext
        totalAssetInThePool={totalAssetInThePool}
        setTotalAssetInThePool={setTotalAssetInThePool}
        totalAssetBorrowed={totalAssetBorrowed}
        setTotalAssetBorrowed={setTotalAssetBorrowed}
        borrowedRatio={borrowedRatio}
        setBorrowedRatio={setBorrowedRatio}
        borrowBaseRate={borrowBaseRate}
        setBorrowBaseRate={setBorrowBaseRate}
        borrowPerSecondRate={borrowPerSecondRate}
        setBorrowPerSecondRate={setBorrowPerSecondRate}
        executionBaseFee={executionBaseFee}
        setExecutionBaseFee={setExecutionBaseFee}
      />
      <main className={styles.main}>
        <h1 className={inter.className}>Fr0x Proof Of Concept</h1>
        <div className={styles.buttonWrapper}>
          <div
            className={`${styles.buttonPage} ${styles.left}`}
            onClick={() => setPage("POSITION")}
          >
            POSITION
          </div>
          <div
            className={`${styles.buttonPage} ${styles.right}`}
            onClick={() => setPage("SIMULATION")}
          >
            SIMULATION
          </div>
        </div>
        {page === "POSITION" && (
          <Position
            borrowedRatio={borrowedRatio}
            borrowBaseRate={borrowBaseRate}
            borrowPerSecondRate={borrowPerSecondRate}
            executionBaseFee={executionBaseFee}
          />
        )}
        {page === "SIMULATION" && <Simulation />}
      </main>
    </>
  );
}
